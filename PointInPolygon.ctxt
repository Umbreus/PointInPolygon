#BlueJ class context
comment0.params=shape
comment0.target=PointInPolygon(double[][])
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ PointInPolygon\n\ \n\ \ @param\ shape\ The\ vertices\ of\ the\ polygon\ (x-y\ coords),\ in\ order\ {{x1,y1},{x2,y2},...}\n
comment1.params=boundary
comment1.target=Point[]\ getVertices(double[][])
comment1.text=\n\ Returns\ an\ array\ of\ Points\ for\ the\ vertices\ of\ the\ polygon\ given\ a\ set\ of\ ordered\ points\n\ \n\ @param\ \ boundary\ The\ ordered\ set\ of\ boundary\ points\ for\ the\ shape\ \n
comment2.params=point
comment2.target=boolean\ checkPoint(double[])
comment2.text=\n\ Checks\ if\ a\ given\ point\ is\ in\ the\ polygon\ by\ calling\ checkPoint(Point\ p)\n\ \n\ @param\ \ \ point\ \ The\ point\ to\ check\ {x,y}\n\ @return\ \ \ \ \ \ \ \ \ true\ if\ the\ point\ is\ in\ the\ polygon,\ false\ otherwise\n
comment3.params=p
comment3.target=boolean\ checkPoint(Point)
comment3.text=\n\ Checks\ if\ a\ given\ Point\ is\ in\ the\ polygon\n\ \n\ @param\ \ \ point\ \ The\ Point\ to\ check\n\ @return\ \ \ \ \ \ \ \ \ true\ if\ the\ point\ is\ in\ the\ polygon,\ false\ otherwise\n
comment4.params=P0\ P1\ P2
comment4.target=double\ isLeft(Point,\ Point,\ Point)
comment4.text=\ \n\ \ isLeft()\:\ tests\ if\ a\ point\ is\ Left|On|Right\ of\ an\ infinite\ line.\n\ \ \n\ \ Input\:\ \ three\ points\ P0,\ P1,\ and\ P2\n\ \ Return\:\ >0\ for\ P2\ left\ of\ the\ line\ through\ P0\ and\ P1\n\ \ \ \ \ \ \ \ \ \ \=0\ for\ P2\ \ on\ the\ line\n\ \ \ \ \ \ \ \ \ \ <0\ for\ P2\ \ right\ of\ the\ line\n\ \ \ \ \ \ \ \ \ \ \n\ \ See\:\ Algorithm\ 1\ "Area\ of\ Triangles\ and\ Polygons"\n
comment5.params=P\ V\ n
comment5.target=int\ cn_PnPoly(Point,\ Point[],\ int)
comment5.text=\ \n\ \ cn_PnPoly()\:\ crossing\ number\ test\ for\ a\ point\ in\ a\ polygon\n\ \ \n\ \ Input\:\ \ \ P\ \=\ a\ point,\n\ \ \ \ \ \ \ \ \ \ \ V[]\ \=\ vertex\ points\ of\ a\ polygon\ V[n+1]\ with\ V[n]\=V[0]\n\ \ Return\:\ \ 0\ \=\ outside,\ 1\ \=\ inside\n\ \ \n\ \ This\ code\ is\ patterned\ after\ [Franklin,\ 2000]\n
comment6.params=P\ V\ n
comment6.target=int\ wn_PnPoly(Point,\ Point[],\ int)
comment6.text=\ \n\ \ wn_PnPoly()\:\ winding\ number\ test\ for\ a\ point\ in\ a\ polygon\n\ \ \n\ \ Input\:\ \ \ P\ \=\ a\ point,\n\ \ \ \ \ \ \ \ \ \ \ V[]\ \=\ vertex\ points\ of\ a\ polygon\ V[n+1]\ with\ V[n]\=V[0]\n\ \ Return\:\ \ wn\ \=\ the\ winding\ number\ (\=0\ only\ when\ P\ is\ outside)\n
numComments=7
